openapi: 3.0.0
info:
  description: |
    # Overview
    IAM (Identity and access management) is a service that runs before any API calls are executed. In order for the API call to be forwarded to the underlying service, the caller's identity must be established (authentication). Following authentication, the caller's permissions are checked against a database to ensure the requested action is authorized

    # Core Concepts

    The core concepts to understand when using IAM is __authentication__ and __authorization__, learning the distinction and relationship between the two is crucial to understanding how permissions are implemented on the system. Role Based Access Control - or RBAC is another deeply integrated concept to understand in order to fully understand authorization

    ## Authentication
    Identities are issued by the IdP (Auth0) through OAuth 2.0
    OpenID Connect protocol in the form of signed JWT tokens. IAM (this service) validates these JWT tokens to extract the identity of the caller

    There are multiple ways to obtain an signed JWT token, typically defined through one of the token grant flows defined by OAuth 2.0. They are only enumerated here by name for brevity. Click on them for details:

    - [Authorization Code Exchange](https://www.oauth.com/oauth2-servers/access-tokens/authorization-code-request/)
    - [Client Credentials Grant](https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/)

    > Note that the SDK will attempt either approaches to obtain an token depending on the environment it is run from

    ## Authorization

    IAM follows the Role Based Access Control (RBAC) model for authorization. Learn more about RBAC [Here](https://en.wikipedia.org/wiki/Role-based_access_control)

    ### Role

    A `Role` defines a set of resources and actions one can perform on the system. A `Role` is an abstract description of a job function or a specific type of user
    of the platform, it does not define who those users are. For that, please see `Binding`

    Once a `Role` is created

    ### Binding

    A `Binding` describes a relationship between a principal (user / group or machine user) and a `Role`. Principals bound
    to the `Role` in a `Binding` are granted the permissions defined in the `Role`

  title: IAM
  version: 1.0.0-RC
  license:
    name: Apache 2.0
servers:
  - url: /iam/api/v1
paths:
  /roles:
    get:
      tags:
        - Role
      summary: Get Roles
      operationId: GetRoles
      description: |
        Enumerate all the `Role`s on the system
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRolesResponse'
        400:
          description: |
            Server cannot process the request due to a client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRolesResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRolesResponse'
    post:
      tags:
        - Role
      summary: Create or Update Role
      operationId: CreateOrUpdateRole
      description: Create or update a role. The role to create or update is specified in the request body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateRoleResponse'
        400:
          description: |
            Server cannot process the request due to a client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateRoleResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateRoleResponse'
  /roles/{id}:
    get:
      tags:
        - Role
      summary: Get Role
      operationId: GetRole
      description: Get a `Role` by its identifier
      parameters:
        - name: id
          in: path
          example: power-users
          schema:
            type: string
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoleResponse'
        400:
          description: |
            Server cannot process the request due to a client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoleResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoleResponse'
    delete:
      tags:
        - Role
      summary: Delete Role
      operationId: DeleteRole
      parameters:
        - name: id
          in: path
          example: power-users
          schema:
            type: string
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoleResponse'
        400:
          description: |
            Server cannot process the request due to a client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoleResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoleResponse'
  /roles/{roleId}/bindings:
    get:
      tags:
        - Bindings
      summary: Get Bindings
      operationId: GetBindings
      description: Get all `Binding`s for a given role
      parameters:
        - name: roleId
          in: path
          example: power-users
          schema:
            type: string
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBindingsResponse'
        400:
          description: |
            Server cannot process the request due to a client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBindingsResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBindingsResponse'
    post:
      tags:
        - Bindings
      summary: Create or Update Binding
      operationId: CreateOrUpdateBinding
      description: Create or update a `Binding` object. This operation associates a principal with a role
      parameters:
        - name: roleId
          example: power-users
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateBindingRequest'
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateBindingResponse'
        400:
          description: |
            Server cannot process the request due to a client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateBindingResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateBindingResponse'

  /roles/{roleId}/bindings/{id}:
    get:
      tags:
        - Bindings
      summary: Get Binding
      operationId: GetBinding
      description: Get a `Binding` by id
      parameters:
        - name: roleId
          in: path
          example: power-users
          schema:
            type: string
        - name: id
          in: path
          example: joe
          schema:
            type: string
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBindingResponse'
        400:
          description: |
            Server cannot process the request due to a client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBindingResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBindingResponse'
    delete:
      tags:
        - Bindings
      summary: Delete Binding
      operationId: Delete Binding
      parameters:
        - name: roleId
          in: path
          example: power-users
          schema:
            type: string
        - name: id
          in: path
          example: joe
          schema:
            type: string
      description: Delete a `Binding` by id
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBindingResponse'
        400:
          description: |
            Server cannot process the request due to a client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBindingResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBindingResponse'
  /_authorize:
    get:
      summary: Authorize Request
      operationId: authorizeRequest
      parameters:
        - name: Authorization
          in: header
          description: The JWT token representing the subject to be authorized (i.e. `Bearer xxxx`)
          schema:
            type: string
            required: false
        - name: X-Original-URL
          in: header
          description: The resource the subject is attempting to access
          schema:
            type: string
          required: true
        - name: X-Original-Method
          in: header
          description: the HTTP verb the subject is attempting to access
          schema:
            type: string
            enum:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
          required: true
      responses:
        200:
          description: |
            Request has succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
        403:
          description: |
            Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
        500:
          description: |
            Server encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizeResponse'
components:
  schemas:
    GetAllRolesResponse:
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Binding:
      properties:
        id:
          type: string
          format: uuid
        principalId:
          type: string
        roleId:
          type: string
        principalType:
          type: string
          enum:
            - user
            - group
            - machine
    Role:
      properties:
        id:
          type: string
          description: Unique id for the role
        policies:
          description: Policies associated with the role
          type: array
          items:
            $ref: '#/components/schemas/Policy'
    Policy:
      properties:
        resource:
          type: string
        actions:
          type: array
          items:
            type: string
    CreateOrUpdateRoleResponse:
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: 'date-time'
    CreateOrUpdateRoleRequest:
      properties:
        role:
          $ref: '#/components/schemas/Role'
    GetRoleResponse:
      properties:
        role:
          $ref: '#/components/schemas/Role'
    DeleteRoleResponse:
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: 'date-time'
    GetBindingResponse:
      properties:
        binding:
          $ref: '#/components/schemas/Binding'
    DeleteBindingResponse:
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: 'date-time'
    GetBindingsResponse:
      properties:
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
    CreateOrUpdateBindingResponse:
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: 'date-time'
    CreateOrUpdateBindingRequest:
      properties:
        binding:
          $ref: '#/components/schemas/Binding'
    AuthorizeResponse:
      properties:
        allowed:
          description: Specifies whether the request is authorized
          type: boolean
        message:
          type: string
        timestamp:
          type: string
          format: 'date-time'
